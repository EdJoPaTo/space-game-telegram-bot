import {FacilityIdentifier} from '../static/facility.js';
import {LifelessIdentifier} from '../static/lifeless.js';
import {ShipLayoutIdentifier} from '../static/shiplayout.js';
import {SolarsystemIdentifier} from '../static/solarsystems.js';

export type Entity = Facility | Lifeless | NPC | Player;

export interface Facility {
	readonly type: 'facility';
	readonly id: FacilityIdentifier;
}

export interface Lifeless {
	readonly type: 'lifeless';
	readonly id: LifelessIdentifier;
	/** The front frontend doesnt even need this content */
	// readonly status: LifelessStatus;
}

export interface NPC {
	readonly type: 'npc';
	readonly shiplayout: ShipLayoutIdentifier;

	/** The front frontend doesnt even need this content */
	// readonly fitting: ShipFitting;
	// readonly status: ShipStatus;

	// TODO: race / group? something like pirates, guards, â€¦ -> different logic
}

/** Grab Fitting and status from PlayerInSpace infos? */
export interface Player {
	readonly type: 'player';
	readonly id: unknown;
	readonly shiplayout: ShipLayoutIdentifier;
}

/** Written by backend, readonly for frontend */
export interface Site {
	readonly entities: readonly Entity[];
}

/** Solarsystem - Planet - Unique Hex code generated by backend */
export type SiteIdentifier = `${SolarsystemIdentifier}-${number}-${string}`;
