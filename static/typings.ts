/**
 * Space game typings
 * by EdJoPaTo
 * AGPL-3.0-or-later
 * TODO: repolink
 */

export type SiteEntity =
  | ({ type: "lifeless" } & SiteEntityLifeless)
  | ({ type: "facility" } & SiteEntityFacility)
  | ({ type: "npc" } & SiteEntityNpc)
  | ({ type: "player" } & SiteEntityPlayer);

/* Autogenerated after here */

export interface CargoAmounts {
  readonly ore: number;
}
export interface FacilityDetails {
  readonly services: readonly Service[];
}
export type Service = "dock" | "jump";
export type Facility = "station" | "stargate";
export interface Health {
  readonly armor: number;
  readonly structure: number;
}
export interface LifelessDetails {
  readonly hitpointsArmor: number;
  readonly hitpointsStructure: number;
  readonly ore: number;
}
export type Lifeless = "asteroid" | "smallWreck";
export interface ModulePassiveDetails {
  readonly requiredCpu: number;
  readonly requiredPowergrid: number;
  readonly hitpointsArmor: number;
}
export type ModulePassive = "rookieArmorPlate";
export interface ModuleTargetedDetails {
  readonly requiredCpu: number;
  readonly requiredPowergrid: number;
  readonly effectsOrigin: readonly RoundEffect[];
  readonly effectsTarget: readonly RoundEffect[];
}
export type ModuleTargeted = "guardianLaser" | "rookieLaser" | "rookieMiner";
export interface ModuleUntargetedDetails {
  readonly requiredCpu: number;
  readonly requiredPowergrid: number;
  readonly effects: readonly RoundEffect[];
}
export type ModuleUntargeted = "rookieArmorRepair";
export type NpcFaction = "guards" | "pirates";
export interface PlayerGeneral {
  readonly homeSolarsystem: Solarsystem;
  readonly homeStation: number;
  readonly paperclips: number;
}
export interface PlayerLocationSite {
  readonly solarsystem: Solarsystem;
  readonly site: Site;
}
export interface PlayerLocationStation {
  readonly solarsystem: Solarsystem;
  readonly station: number;
}
export type PlayerLocation =
  | PlayerLocationSite
  | PlayerLocationStation
  | PlayerLocationWarp;
export interface PlayerLocationWarp {
  readonly solarsystem: Solarsystem;
  readonly towards: Site;
}
export interface PlayerStationAssets {
  readonly ships: readonly ShipFitting[];
}
export type Player = { platform: "telegram"; id: number };
export type RoundEffect =
  | { type: "capacitorDrain"; amount: number }
  | { type: "capacitorRecharge"; amount: number }
  | { type: "armorRepair"; amount: number }
  | { type: "structureRepair"; amount: number }
  | { type: "damage"; amount: number }
  | { type: "mine"; amount: number }
  | { type: "warpDisruption"; amount: null };
export interface ShipCargo {
  readonly ore: number;
}
export type ShipClass = "rookieShip" | "frigate" | "cruiser" | "battleship";
export interface ShipFitting {
  readonly layout: ShipLayout;
  readonly slotsTargeted: readonly ModuleTargeted[];
  readonly slotsUntargeted: readonly ModuleUntargeted[];
  readonly slotsPassive: readonly ModulePassive[];
}
export interface ShipLayoutDetails {
  readonly class: ShipClass;
  readonly cpu: number;
  readonly powergrid: number;
  readonly slotsTargeted: number;
  readonly slotsUntargeted: number;
  readonly slotsPassive: number;
  readonly oreBay: number;
  readonly capacitor: number;
  readonly hitpointsArmor: number;
  readonly hitpointsStructure: number;
  readonly roundEffects: readonly RoundEffect[];
}
export type ShipLayout = "Paladin" | "Abis" | "Hecate";
export interface ShipStatus {
  readonly capacitor: number;
  readonly hitpointsArmor: number;
  readonly hitpointsStructure: number;
}
export interface Ship {
  readonly fitting: ShipFitting;
  readonly status: ShipStatus;
  readonly cargo: ShipCargo;
}
export interface SiteEntityFacility {
  readonly id: Facility;
}
export interface SiteEntityLifeless {
  readonly id: Lifeless;
  readonly armor: number;
  readonly structure: number;
}
export interface SiteEntityNpc {
  readonly faction: NpcFaction;
  readonly shiplayout: ShipLayout;
  readonly armor: number;
  readonly structure: number;
}
export interface SiteEntityPlayer {
  readonly id: Player;
  readonly shiplayout: ShipLayout;
  readonly armor: number;
  readonly structure: number;
}
export interface SiteInstructionFacility {
  readonly targetIndexInSite: number;
  readonly service: Service;
}
export interface SiteInstructionModuleTargeted {
  readonly targetIndexInSite: number;
  readonly moduleIndex: number;
}
export interface SiteInstructionModuleUntargeted {
  readonly moduleIndex: number;
}
export type SiteInstruction =
  | { type: "moduleUntargeted"; args: SiteInstructionModuleUntargeted }
  | { type: "moduleTargeted"; args: SiteInstructionModuleTargeted }
  | { type: "selfDestruct"; args: null }
  | { type: "facility"; args: SiteInstructionFacility }
  | { type: "warp"; args: SiteInstructionWarp };
export interface SiteInstructionWarp {
  readonly target: Site;
}
export type SiteLogActor = Facility | Lifeless | [Player, ShipLayout] | [
  NpcFaction,
  ShipLayout,
];
export type SiteLog =
  | {
    type: "moduleTargeted";
    details: [SiteLogActor, ModuleTargeted, SiteLogActor];
  }
  | { type: "collapse"; details: SiteLogActor }
  | { type: "jump"; details: SiteLogActor }
  | { type: "rapidUnscheduledDisassembly"; details: SiteLogActor }
  | { type: "dock"; details: SiteLogActor }
  | { type: "undock"; details: SiteLogActor }
  | { type: "warpIn"; details: SiteLogActor }
  | { type: "warpOut"; details: SiteLogActor };
export type SitesNearPlanet = Readonly<Partial<Record<number, Site[]>>>;
export type Site = { kind: "station"; unique: number } | {
  readonly kind: "stargate";
  readonly unique: Solarsystem;
} | { kind: "asteroidField"; unique: number };
export interface SolarsystemDetails {
  readonly security: number;
  readonly planets: number;
  readonly stargates: Readonly<Partial<Record<Solarsystem, number>>>;
  readonly stations: readonly number[];
}
export type Solarsystem =
  | "Wabinihwa"
  | "Arama"
  | "Iramil"
  | "Liagi"
  | "Plagar"
  | "Vosu";
export type StationInstruction = "repair" | "undock" | "sellOre";
